@using Newtonsoft.Json
@using Monochrome.Module.Core.Models
@model Monochrome.Module.Core.Areas.Admin.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard |";
    var totalDays = 0D;
    totalDays = Model.FromOneYearDate.DateTime == default? 0: Model.MaximumDate.Subtract(Model.FromOneYearDate.DateTime).TotalDays;
}

@section styles{
    <!-- CSS Libraries -->
    <link rel="stylesheet" href="~/assets/modules/jqvmap/dist/jqvmap.min.css">

}

<!-- Start app main Content -->
<div class="main-content">
    <section class="section">
        <div class="section-header">
            <h1>Dashboard</h1>
        </div>
        <div class="row">
            <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                <div class="card card-statistic-1">
                    <div class="card-icon bg-primary">
                        <i class="far fa-user"></i>
                    </div>
                    <div class="card-wrap">
                        <div class="card-header">
                            <h4>Total Admins</h4>
                        </div>
                        <div class="card-body">
                            @Model.TotalAdmins
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                <div class="card card-statistic-1">
                    <div class="card-icon bg-danger">
                        <i class="far fa-newspaper"></i>
                    </div>
                    <div class="card-wrap">
                        <div class="card-header">
                            <h4>Balance</h4>
                        </div>
                        <div class="card-body">
                            ₦@((Model.Balance/100).ToString("N2"))
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                <div class="card card-statistic-1">
                    <div class="card-icon bg-warning">
                        <i class="far fa-file"></i>
                    </div>
                    <div class="card-wrap">
                        <div class="card-header">
                            <h4>Unpaid Loans</h4>
                        </div>
                        <div class="card-body">
                            ₦@((Model.UnPaidLoans/100).ToString("N2"))
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6 col-12">
                <div class="card card-statistic-1">
                    <div class="card-icon bg-success">
                        <i class="fas fa-circle"></i>
                    </div>
                    <div class="card-wrap">
                        <div class="card-header">
                            <h4>Total Loans</h4>
                        </div>
                        <div class="card-body">
                            @Model.TotalLoans
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header">
                        <h4>Transactions</h4>
                        <div class="card-header-action">
                            @if (totalDays >= 30)
                            {
                                <button class="btn btn-sm btn-outline-secondary mr-1" id="one_month">1M</button>
                            }
                            @if (totalDays > 30 && totalDays >= 180)
                            {
                                <button class="btn btn-sm btn-outline-secondary mr-1" id="six_months">6M</button>
                            }
                            @if (totalDays > 180 && totalDays >= 365)
                            {
                                <button class="btn btn-sm btn-outline-secondary mr-1 active" id="one_year">1Y</button>
                            }
                            <button class="btn btn-sm btn-outline-secondary" id="all">ALL</button>
                        </div>
                    </div>
                    <div class="card-body">
                      
                        <div id="apex-timeline-chart"></div>
                    </div>
                </div>
            </div>
        </div>
       
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h4>Pending Loans</h4>
                        <div class="card-header-action">
                            <a href="/admin/loans/index" class="btn btn-primary">View All <i class="fas fa-chevron-right"></i></a>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-md v_center">
                                <tr>
                                    <th>#</th>
                                    <th>User</th>
                                    <th>Amount Requested</th>
                                    <th>Date Applied</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                                @{
                                    if (!Model.Data.Any())
                                    {
                                        <tr>
                                            <td colspan="6" class="text-center">No PendingLoans</td>
                                        </tr>
                                    }
                                    else
                                    {
                                        int x = 0;
                                        foreach (var loan in Model.PendingLoans)
                                        {
                                            x++;
                                            <tr>
                                                <td>@x</td>
                                                <td>@loan.UserAccount</td>
                                                <td>₦@((loan.AmountRequested/100).ToString("N2"))</td>
                                                <td>@loan.DateApplied.ToString("dd MMM yyyy")</td>
                                                <td>
                                                    @switch (loan.Status)
                                                    {
                                                        case ApplicationStatus.Approved:
                                                            <div class="badge badge-success">Approved</div>
                                                            break;
                                                        case ApplicationStatus.Pending:
                                                            <div class="badge badge-warning">Pending</div>
                                                            break;
                                                        case ApplicationStatus.Rejected:
                                                            <div class="badge badge-danger">Rejected</div>
                                                            break;
                                                        default:
                                                            break;
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group">
                                                        <i class="fas fa-ellipsis-v" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></i>
                                                        <div class="dropdown-menu">
                                                            <a class="dropdown-item" href="/admin/loans/details/?id=@loan.Id">View</a>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card card-hero">
                    <div class="card-header">
                        <div class="card-icon">
                            <i class="far fa-question-circle"></i>
                        </div>
                        <h4>₦@((Model.TotalOverdue/100).ToString("N2"))</h4>
                        <div class="card-description">Is overdue for payment</div>
                    </div>
                    <div class="card-body p-0">
                        <div class="tickets-list">
                            <a href="javascript:void(0);" class="ticket-item">
                                <div class="ticket-title">
                                    <h4>Highest Balance</h4>
                                </div>
                                <div class="ticket-info">
                                    <div>@Model.HighestBalanceUserName</div>
                                    <div>₦@((Model.HighestBalance.GetValueOrDefault()/100).ToString("N2"))</div>
                                </div>
                            </a>
                            <a href="javascript:void(0);" class="ticket-item">
                                <div class="ticket-title">
                                    <h4>Lowest Balance</h4>
                                </div>
                                <div class="ticket-info">
                                    <div>@Model.LowestBalanceUserName</div>
                                    <div>₦@((Model.LowestBalance.GetValueOrDefault()/100).ToString("N2"))</div>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
    </section>
</div>

@section scripts{
    <script src="~/assets/modules/apexcharts/apexcharts.min.js"></script>
    <script src="~/assets/modules/simple-weather/jquery.simpleWeather.min.js"></script>
}

@section modals{
    <!-- Page Specific JS File -->
    <script>
        $(document).ready(function () {
            var options = {

                chart: {
                    type: 'area',
                    height: 288,
                    toolbar: {
                        show: false,
                    },
                },
                colors: ['#5a5278'],
                dataLabels: {
                    enabled: false
                },
                
                series: [{
                    data: @JsonConvert.SerializeObject(Model.Data)
                },

                ],
                markers: {
                    size: 0,
                    style: 'hollow',
                },
                xaxis: {
                    type: 'datetime',
                    min: new Date('@Model.FromOneYearDate.ToString("dd MMM yyy")').getTime(),
                    tickAmount: 6,
                    show: false,
                },
                tooltip: {
                    x: {
                        format: 'dd MMM yyyy'
                    }
                },
                fill: {
                    type: 'gradient',
                    gradient: {
                        shadeIntensity: 1,
                        opacityFrom: 0.7,
                        opacityTo: 0.9,
                        stops: [0, 100]
                    }
                },
                stroke: {
                    show: true,
                    curve: 'smooth',
                    width: 2,
                },
                grid: {
                    yaxis: {
                        lines: {
                            show: false,
                        }
                    },
                },
            }

            var chart = new ApexCharts(
                document.querySelector("#apex-timeline-chart"),
                options
            );

            chart.render();

            var resetCssClasses = function (activeEl) {
                var els = document.querySelectorAll("button");
                Array.prototype.forEach.call(els, function (el) {
                    el.classList.remove('active');
                });

                activeEl.target.classList.add('active')
            }
          
            @if(Model.MaximumDate != default)
            {

                if (totalDays <= 30)
                {
                    <text>
                        document.querySelector("#one_month").addEventListener('click', function (e) {
                            resetCssClasses(e)
                            chart.updateOptions({
                                xaxis: {
                                    min: new Date('@Model.MaximumDate.Subtract(TimeSpan.FromDays(30)).ToString("dd MMM yyy")').getTime(),
                                    max: new Date('@Model.MaximumDate.ToString("dd MMM yyy")').getTime(),
                                }
                            })
                        })
                    </text>
                }

                if (totalDays > 30 && totalDays >= 180)
                {
                    <text>
                        document.querySelector("#six_months").addEventListener('click', function (e) {
                        resetCssClasses(e)
                        chart.updateOptions({
                            xaxis: {
                                min: new Date('@Model.MaximumDate.Subtract(TimeSpan.FromDays(180)).ToString("dd MMM yyy")').getTime(),
                                max: new Date('@Model.MaximumDate.ToString("dd MMM yyy")').getTime(),
                                }
                            })
                        })
                    </text>
                }

                if (totalDays > 180 && totalDays >= 365)
                {
                    <text>
                          document.querySelector("#one_year").addEventListener('click', function (e) {
                            resetCssClasses(e)
                            chart.updateOptions({
                                xaxis: {
                                    min: new Date('@Model.MaximumDate.Subtract(TimeSpan.FromDays(365)).ToString("dd MMM yyy")').getTime(),
                                    max: new Date('@Model.MaximumDate.ToString("dd MMM yyy")').getTime(),
                                }
                            })
                        })
                    </text>
                }
            }
        

            document.querySelector("#all").addEventListener('click', function (e) {
                resetCssClasses(e)
                chart.updateOptions({
                    xaxis: {
                        min: undefined,
                        max: undefined,
                    }
                })
            })
           
        });

    </script>
}